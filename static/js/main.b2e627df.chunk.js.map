{"version":3,"sources":["axios-config.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","Todo","content","id","isDone","markComplete","deleteTodo","todos","setTodos","className","type","name","checked","onChange","value","style","textDecoration","e","text","newTodos","updatedContent","forEach","todo","put","then","res","console","log","catch","err","error","handleOnChange","target","onClick","TodoInput","props","useState","setValue","onSubmit","event","preventDefault","post","toString","addTodo","data","allDone","placeholder","App","useEffect","a","fetchData","useReducer","state","action","Error","filter","dispatchFilter","filteredTodos","map","editTodo","push","delete","activeTodos","activeTodoCount","completedTodos","toggleClearCompleted","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b2e627df.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst instance = axios.create({\n\tbaseURL: \"https://todo-app-rs.herokuapp.com/todos\",\n});\n\nexport default instance;\n","import \"./App.css\";\nimport React, { useState, useReducer, useEffect } from \"react\";\nimport axios from \"./axios-config\";\n\n// To do component, if object `isDone` is true, check box\nconst Todo = ({\n\tcontent,\n\tid,\n\tisDone,\n\tmarkComplete,\n\tdeleteTodo,\n\ttodos,\n\tsetTodos,\n}) => {\n\tconst handleOnChange = (text, id) => {\n\t\tconst newTodos = [...todos];\n\t\tlet updatedContent = text;\n\t\tnewTodos.forEach(todo => {\n\t\t\tif (todo.id === id) {\n\t\t\t\ttodo.content = updatedContent;\n\t\t\t}\n\t\t\taxios\n\t\t\t\t.put(`/${id}`, {\n\t\t\t\t\tcontent: todo.content,\n\t\t\t\t})\n\t\t\t\t.then(res => console.log(res))\n\t\t\t\t.catch(err => console.error(err));\n\t\t});\n\t\tsetTodos(newTodos);\n\t};\n\n\treturn (\n\t\t<div className='entry todo-list__entry' key={id}>\n\t\t\t<input\n\t\t\t\ttype='checkbox'\n\t\t\t\tclassName='checkbox entry__checkbox'\n\t\t\t\tid={id}\n\t\t\t\tname={content}\n\t\t\t\tchecked={isDone}\n\t\t\t\tonChange={() => markComplete(id, isDone)}\n\t\t\t/>\n\t\t\t<input\n\t\t\t\ttype='text'\n\t\t\t\tclassName='label entry__label'\n\t\t\t\tvalue={content}\n\t\t\t\tstyle={{ textDecoration: isDone === true ? \"line-through\" : \"\" }}\n\t\t\t\tonChange={e => handleOnChange(e.target.value, id)}\n\t\t\t/>\n\t\t\t<button onClick={() => deleteTodo(id)} className='button entry__button'>\n\t\t\t\tx\n\t\t\t</button>\n\t\t</div>\n\t);\n};\n\nconst TodoInput = props => {\n\tconst [value, setValue] = useState(\"\");\n\tconst handleSubmit = event => {\n\t\tevent.preventDefault();\n\t\tif (!value) return;\n\t\taxios\n\t\t\t.post(\"\", {\n\t\t\t\tcontent: value.toString(),\n\t\t\t\tisDone: false,\n\t\t\t})\n\t\t\t.then(res => {\n\t\t\t\tprops.addTodo(res.data);\n\t\t\t\tconsole.log(\"POST RESPONSE\", res);\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tconsole.log(\"POST ERROR\", err);\n\t\t\t});\n\t\tsetValue(\"\");\n\t};\n\n\treturn (\n\t\t<form onSubmit={handleSubmit}>\n\t\t\t<button\n\t\t\t\ttype='button'\n\t\t\t\tclassName='button todo-form__button'\n\t\t\t\tid='chevron'\n\t\t\t\tonClick={props.allDone}\n\t\t\t>\n\t\t\t\t>\n\t\t\t</button>\n\t\t\t<input\n\t\t\t\ttype='text'\n\t\t\t\tclassName='input todo-header__input'\n\t\t\t\tvalue={value}\n\t\t\t\tplaceholder='What needs to be done?'\n\t\t\t\tonChange={e => setValue(e.target.value)}\n\t\t\t/>\n\t\t</form>\n\t);\n};\n\nfunction App() {\n\tconst [todos, setTodos] = useState([]);\n\n\t// Fetch todos from API\n\tuseEffect(() => {\n\t\tconst fetchData = async () => {\n\t\t\tconst res = await axios();\n\t\t\tsetTodos(res.data);\n\t\t};\n\t\tfetchData().catch(err => console.error(err));\n\t}, []);\n\n\t// Filter todos by isDone value\n\tconst filterReducer = (state, action) => {\n\t\tswitch (action.type) {\n\t\t\tcase \"SHOW_ALL\":\n\t\t\t\treturn \"ALL\";\n\t\t\tcase \"SHOW_ACTIVE\":\n\t\t\t\treturn \"ACTIVE\";\n\t\t\tcase \"SHOW_COMPLETED\":\n\t\t\t\treturn \"COMPLETED\";\n\t\t\tcase \"CLEAR_COMPLETED\":\n\t\t\t\treturn \"CLEAR\";\n\t\t\tdefault:\n\t\t\t\tthrow new Error();\n\t\t}\n\t};\n\n\tconst [filter, dispatchFilter] = useReducer(filterReducer, \"ALL\");\n\n\tconst filteredTodos = todos.filter(todo => {\n\t\tif (filter === \"ALL\") {\n\t\t\treturn true;\n\t\t}\n\t\tif (filter === \"ACTIVE\" && !todo.isDone) {\n\t\t\treturn true;\n\t\t}\n\t\tif (filter === \"COMPLETED\" && todo.isDone) {\n\t\t\treturn true;\n\t\t}\n\t\tif (filter === \"CLEAR\" && todo.isDone) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t});\n\n\t// Filter: show all todos\n\tconst handleShowAll = () => {\n\t\tdispatchFilter({ type: \"SHOW_ALL\" });\n\t};\n\n\t// Filter: show all active todos\n\tconst handleShowActive = () => {\n\t\tdispatchFilter({ type: \"SHOW_ACTIVE\" });\n\t};\n\n\t// Filter: show all completed todos\n\tconst handleShowCompleted = () => {\n\t\tdispatchFilter({ type: \"SHOW_COMPLETED\" });\n\t};\n\n\t// Create todo object\n\tconst addTodo = data => {\n\t\tconst newTodos = [\n\t\t\t...todos,\n\t\t\t{ id: data.id, content: data.content, isDone: data.isDone },\n\t\t];\n\t\tsetTodos(newTodos);\n\t};\n\n\t// TODO: Edit todo object\n\tconst editTodo = (id, content) => {\n\t\tconst newTodos = [...todos];\n\t\ttodos.forEach(todo => {\n\t\t\tif (todo.id === id) {\n\t\t\t\ttodo.content = content;\n\t\t\t\taxios\n\t\t\t\t\t.put(`/${id}`, {\n\t\t\t\t\t\tcontent: content.toString(),\n\t\t\t\t\t})\n\t\t\t\t\t.then(res => {\n\t\t\t\t\t\tconsole.log(\"edit todo\", res.data);\n\t\t\t\t\t})\n\t\t\t\t\t.catch(err => {\n\t\t\t\t\t\tconsole.error(err);\n\t\t\t\t\t});\n\t\t\t}\n\t\t\tsetTodos(newTodos);\n\t\t});\n\t};\n\n\t// Active todo number\n\tconst activeTodoCount = () => {\n\t\tlet activeTodos = 0;\n\t\ttodos.forEach(todo => {\n\t\t\tif (!todo.isDone) {\n\t\t\t\tactiveTodos++;\n\t\t\t}\n\t\t});\n\t\treturn activeTodos;\n\t};\n\n\t// Toggle 'Clear Completed' button\n\tconst toggleClearCompleted = () => {\n\t\tlet completedTodos = 0;\n\t\ttodos.forEach(todo => {\n\t\t\tif (todo.isDone) {\n\t\t\t\tcompletedTodos++;\n\t\t\t}\n\t\t});\n\t\tif (completedTodos === 0) {\n\t\t\treturn false;\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t};\n\n\t// Mark todo as complete\n\tconst markComplete = (id, isDone) => {\n\t\tconst newTodos = [...todos];\n\t\tnewTodos.forEach(todo => {\n\t\t\tif (todo.id === id && todo.isDone !== true) {\n\t\t\t\taxios\n\t\t\t\t\t.put(`/${id}`, {\n\t\t\t\t\t\tisDone: \"true\",\n\t\t\t\t\t})\n\t\t\t\t\t.then(res => {\n\t\t\t\t\t\tconsole.log(\"PUT\", res.data);\n\t\t\t\t\t\ttodo.isDone = true;\n\t\t\t\t\t\tsetTodos(newTodos);\n\t\t\t\t\t})\n\t\t\t\t\t.catch(err => console.error(err));\n\t\t\t} else if (todo.id === id && todo.isDone !== false) {\n\t\t\t\taxios\n\t\t\t\t\t.put(`/${id}`, {\n\t\t\t\t\t\tisDone: \"false\",\n\t\t\t\t\t})\n\t\t\t\t\t.then(res => {\n\t\t\t\t\t\tconsole.log(\"PUT\", res.data);\n\t\t\t\t\t\ttodo.isDone = false;\n\t\t\t\t\t\tsetTodos(newTodos);\n\t\t\t\t\t})\n\t\t\t\t\t.catch(err => console.error(err));\n\t\t\t}\n\t\t});\n\t};\n\n\t// Mark all todos as complete\n\tconst allDone = () => {\n\t\tconst newTodos = [...todos];\n\t\tnewTodos.forEach(todo => {\n\t\t\tif (todo.isDone !== true) {\n\t\t\t\taxios\n\t\t\t\t\t.put(`/${todo.id}`, {\n\t\t\t\t\t\tisDone: \"true\",\n\t\t\t\t\t})\n\t\t\t\t\t.then(res => {\n\t\t\t\t\t\tconsole.log(\"PUT\", res.data);\n\t\t\t\t\t})\n\t\t\t\t\t.catch(err => console.error(err));\n\t\t\t}\n\t\t\ttodo.isDone = true;\n\t\t\tsetTodos(newTodos);\n\t\t});\n\t};\n\n\t// Delete todo object\n\tconst deleteTodo = id => {\n\t\tconst newTodos = [];\n\t\ttodos.forEach(todo => {\n\t\t\tif (todo.id !== id) {\n\t\t\t\tnewTodos.push(todo);\n\t\t\t} else if (todo.id === id) {\n\t\t\t\taxios\n\t\t\t\t\t.delete(`/${id}`)\n\t\t\t\t\t.then(res => {\n\t\t\t\t\t\tconsole.log(\"deletetodo\", res.data);\n\t\t\t\t\t\tsetTodos(newTodos);\n\t\t\t\t\t})\n\t\t\t\t\t.catch(err => {\n\t\t\t\t\t\tconsole.error(err);\n\t\t\t\t\t});\n\t\t\t}\n\t\t});\n\t};\n\n\t// Clear all completed todos\n\tconst handleClearCompleted = () => {\n\t\tconst newTodos = [];\n\t\ttodos.forEach(todo => {\n\t\t\tif (!todo.isDone) {\n\t\t\t\tnewTodos.push(todo);\n\t\t\t} else if (todo.isDone) {\n\t\t\t\taxios\n\t\t\t\t\t.delete(`/${todo.id}`)\n\t\t\t\t\t.then(res => {\n\t\t\t\t\t\tconsole.log(\"deletetodo\", res.data);\n\t\t\t\t\t})\n\t\t\t\t\t.catch(err => {\n\t\t\t\t\t\tconsole.error(err);\n\t\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\tsetTodos(newTodos);\n\t};\n\n\treturn (\n\t\t<div className='App'>\n\t\t\t<div className='title todo-header__title'>\n\t\t\t\t<h1>todos</h1>\n\t\t\t</div>\n\t\t\t<TodoInput addTodo={addTodo} allDone={allDone} />\n\t\t\t<div className='todo-list'>\n\t\t\t\t{filteredTodos.map(todo => (\n\t\t\t\t\t<Todo\n\t\t\t\t\t\tkey={todo.id}\n\t\t\t\t\t\tid={todo.id}\n\t\t\t\t\t\tcontent={todo.content}\n\t\t\t\t\t\teditTodo={e => editTodo(todo.id)}\n\t\t\t\t\t\tisDone={todo.isDone}\n\t\t\t\t\t\tmarkComplete={e => markComplete(todo.id)}\n\t\t\t\t\t\tdeleteTodo={e => deleteTodo(todo.id)}\n\t\t\t\t\t\ttodos={todos}\n\t\t\t\t\t\tsetTodos={setTodos}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t\t<div className='todo-footer'>\n\t\t\t\t<label className='label todo-footer__label'>\n\t\t\t\t\t{activeTodoCount()} items left\n\t\t\t\t</label>\n\t\t\t\t<button\n\t\t\t\t\ttype='button'\n\t\t\t\t\tclassName='button button-all todo-footer__button'\n\t\t\t\t\tonClick={handleShowAll}\n\t\t\t\t>\n\t\t\t\t\tAll\n\t\t\t\t</button>\n\t\t\t\t<button\n\t\t\t\t\ttype='button'\n\t\t\t\t\tclassName='button button-active todo-footer__button'\n\t\t\t\t\tonClick={handleShowActive}\n\t\t\t\t>\n\t\t\t\t\tActive\n\t\t\t\t</button>\n\t\t\t\t<button\n\t\t\t\t\ttype='button'\n\t\t\t\t\tclassName='button button-completed todo-footer__button'\n\t\t\t\t\tonClick={handleShowCompleted}\n\t\t\t\t>\n\t\t\t\t\tCompleted\n\t\t\t\t</button>\n\t\t\t\t{toggleClearCompleted() ? (\n\t\t\t\t\t<button\n\t\t\t\t\t\ttype='button'\n\t\t\t\t\t\tclassName='button button-clear todo-footer__button'\n\t\t\t\t\t\tonClick={handleClearCompleted}\n\t\t\t\t\t>\n\t\t\t\t\t\tClear Completed\n\t\t\t\t\t</button>\n\t\t\t\t) : null}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n\tif (onPerfEntry && onPerfEntry instanceof Function) {\n\t\timport(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n\t\t\tgetCLS(onPerfEntry);\n\t\t\tgetFID(onPerfEntry);\n\t\t\tgetFCP(onPerfEntry);\n\t\t\tgetLCP(onPerfEntry);\n\t\t\tgetTTFB(onPerfEntry);\n\t\t});\n\t}\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}